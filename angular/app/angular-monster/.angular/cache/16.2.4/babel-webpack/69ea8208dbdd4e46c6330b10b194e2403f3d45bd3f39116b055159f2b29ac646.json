{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MonsterListComponent = class MonsterListComponent {\n  constructor(monsterService) {\n    this.monsterService = monsterService;\n    this.pageTitle = 'Monster List';\n    this.imageWidth = 50;\n    this.imageMargin = 2;\n    this.showImage = false;\n    this._listFilter = '';\n    this.filteredMonsters = [];\n    this.errorMessage = '';\n    this.monsters = [];\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredMonsters = this.performFilter(value);\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.monster.filter(product => monster.monsterName.toLocaleLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.showImage = !this.showImage;\n  }\n  ngOnInit() {\n    this.sub = this.monsterService.getProducts().subscribe({\n      next: products => {\n        this.products = products;\n        this.filteredProducts = this.products;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  onRatingClicked(message) {\n    this.pageTitle = 'Product List: ' + message;\n  }\n};\nMonsterListComponent = __decorate([Component({\n  templateUrl: './monster-list.component.html',\n  styleUrls: ['./monster-list.component.css']\n})], MonsterListComponent);","map":{"version":3,"names":["Component","MonsterListComponent","constructor","monsterService","pageTitle","imageWidth","imageMargin","showImage","_listFilter","filteredMonsters","errorMessage","monsters","listFilter","value","console","log","performFilter","filterBy","toLocaleLowerCase","monster","filter","product","monsterName","includes","toggleImage","ngOnInit","sub","getProducts","subscribe","next","products","filteredProducts","error","err","ngOnDestroy","unsubscribe","onRatingClicked","message","__decorate","templateUrl","styleUrls"],"sources":["D:\\dev\\angular-monster\\angular-monster\\src\\app\\monsters\\monster-list.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { IMonster } from './monster';\r\nimport { MonsterService } from './monster.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({    \r\n    templateUrl: './monster-list.component.html',\r\n    styleUrls: ['./monster-list.component.css']\r\n})\r\n\r\nexport class MonsterListComponent implements OnInit, OnDestroy {\r\n    pageTitle = 'Monster List';\r\n    imageWidth = 50;\r\n    imageMargin = 2;\r\n    showImage = false;\r\n    private _listFilter: string = '';\r\n    filteredMonsters: IMonster[] = [];\r\n    errorMessage: string = '';\r\n    sub!: Subscription;\r\n    \r\n\r\n    constructor(private monsterService: MonsterServiceService){}\r\n\r\n    get listFilter(): string{\r\n        return this._listFilter;\r\n    }\r\n\r\n    set listFilter(value: string){\r\n        this._listFilter = value;\r\n        console.log('In setter:', value);\r\n        this.filteredMonsters = this.performFilter(value);\r\n    }\r\n\r\n    performFilter(filterBy: string): IMonster[] {\r\n        filterBy = filterBy.toLocaleLowerCase();\r\n        return this.monster.filter((product: IMonster) => monster.monsterName.toLocaleLowerCase().includes(filterBy));\r\n    }\r\n\r\n    monsters: IMonster[] = [];\r\n\r\n\r\n    toggleImage(): void {\r\n        this.showImage = !this.showImage;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.sub = this.monsterService.getProducts().subscribe({\r\n        next: products => {\r\n          this.products = products;\r\n          this.filteredProducts = this.products;\r\n        },    \r\n        error: err => this.errorMessage = err\r\n      });    \r\n         \r\n    }\r\n\r\n    ngOnDestroy(){\r\n      this.sub.unsubscribe();\r\n    }\r\n\r\n    onRatingClicked(message: string): void{\r\n      this.pageTitle = 'Product List: ' + message;\r\n    }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAUrD,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAW7BC,YAAoBC,cAAqC;IAArC,KAAAA,cAAc,GAAdA,cAAc;IAVlC,KAAAC,SAAS,GAAG,cAAc;IAC1B,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,SAAS,GAAG,KAAK;IACT,KAAAC,WAAW,GAAW,EAAE;IAChC,KAAAC,gBAAgB,GAAe,EAAE;IACjC,KAAAC,YAAY,GAAW,EAAE;IAqBzB,KAAAC,QAAQ,GAAe,EAAE;EAjBkC;EAE3D,IAAIC,UAAUA,CAAA;IACV,OAAO,IAAI,CAACJ,WAAW;EAC3B;EAEA,IAAII,UAAUA,CAACC,KAAa;IACxB,IAAI,CAACL,WAAW,GAAGK,KAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;IAChC,IAAI,CAACJ,gBAAgB,GAAG,IAAI,CAACO,aAAa,CAACH,KAAK,CAAC;EACrD;EAEAG,aAAaA,CAACC,QAAgB;IAC1BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAACC,OAAO,CAACC,MAAM,CAAEC,OAAiB,IAAKF,OAAO,CAACG,WAAW,CAACJ,iBAAiB,EAAE,CAACK,QAAQ,CAACN,QAAQ,CAAC,CAAC;EACjH;EAKAO,WAAWA,CAAA;IACP,IAAI,CAACjB,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EACpC;EAEAkB,QAAQA,CAAA;IACN,IAAI,CAACC,GAAG,GAAG,IAAI,CAACvB,cAAc,CAACwB,WAAW,EAAE,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAEC,QAAQ,IAAG;QACf,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,QAAQ;MACvC,CAAC;MACDE,KAAK,EAAEC,GAAG,IAAI,IAAI,CAACvB,YAAY,GAAGuB;KACnC,CAAC;EAEJ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACR,GAAG,CAACS,WAAW,EAAE;EACxB;EAEAC,eAAeA,CAACC,OAAe;IAC7B,IAAI,CAACjC,SAAS,GAAG,gBAAgB,GAAGiC,OAAO;EAC7C;CACH;AArDYpC,oBAAoB,GAAAqC,UAAA,EALhCtC,SAAS,CAAC;EACPuC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC7C,CAAC,C,EAEWvC,oBAAoB,CAqDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}